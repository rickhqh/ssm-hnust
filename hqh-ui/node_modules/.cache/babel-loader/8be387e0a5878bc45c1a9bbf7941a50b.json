{"ast":null,"code":"import { getCodeImg } from \"@/api/login\";\nimport Cookies from \"js-cookie\";\nimport { encrypt, decrypt } from '@/utils/jsencrypt';\nexport default {\n  name: \"Login\",\n\n  data() {\n    return {\n      codeUrl: \"\",\n      loginForm: {\n        username: \"admin\",\n        password: \"admin123\",\n        rememberMe: false,\n        code: \"\",\n        uuid: \"\"\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          trigger: \"blur\",\n          message: \"请输入您的账号\"\n        }],\n        password: [{\n          required: true,\n          trigger: \"blur\",\n          message: \"请输入您的密码\"\n        }],\n        code: [{\n          required: true,\n          trigger: \"change\",\n          message: \"请输入验证码\"\n        }]\n      },\n      loading: false,\n      // 验证码开关\n      captchaOnOff: true,\n      // 注册开关\n      register: false,\n      redirect: undefined\n    };\n  },\n\n  watch: {\n    $route: {\n      handler: function (route) {\n        this.redirect = route.query && route.query.redirect;\n      },\n      immediate: true\n    }\n  },\n\n  created() {\n    this.getCode();\n    this.getCookie();\n  },\n\n  methods: {\n    getCode() {\n      getCodeImg().then(res => {\n        this.captchaOnOff = res.captchaOnOff === undefined ? true : res.captchaOnOff;\n\n        if (this.captchaOnOff) {\n          this.codeUrl = \"data:image/gif;base64,\" + res.img;\n          this.loginForm.uuid = res.uuid;\n        }\n      });\n    },\n\n    getCookie() {\n      const username = Cookies.get(\"username\");\n      const password = Cookies.get(\"password\");\n      const rememberMe = Cookies.get('rememberMe');\n      this.loginForm = {\n        username: username === undefined ? this.loginForm.username : username,\n        password: password === undefined ? this.loginForm.password : decrypt(password),\n        rememberMe: rememberMe === undefined ? false : Boolean(rememberMe)\n      };\n    },\n\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n\n          if (this.loginForm.rememberMe) {\n            Cookies.set(\"username\", this.loginForm.username, {\n              expires: 30\n            });\n            Cookies.set(\"password\", encrypt(this.loginForm.password), {\n              expires: 30\n            });\n            Cookies.set('rememberMe', this.loginForm.rememberMe, {\n              expires: 30\n            });\n          } else {\n            Cookies.remove(\"username\");\n            Cookies.remove(\"password\");\n            Cookies.remove('rememberMe');\n          }\n\n          this.$store.dispatch(\"Login\", this.loginForm).then(() => {\n            this.$router.push({\n              path: this.redirect || \"/\"\n            }).catch(() => {});\n          }).catch(() => {\n            this.loading = false;\n\n            if (this.captchaOnOff) {\n              this.getCode();\n            }\n          });\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["getCodeImg","Cookies","encrypt","decrypt","name","data","codeUrl","loginForm","username","password","rememberMe","code","uuid","loginRules","required","trigger","message","loading","captchaOnOff","register","redirect","undefined","watch","$route","handler","route","query","immediate","created","getCode","getCookie","methods","then","res","img","get","Boolean","handleLogin","$refs","validate","valid","set","expires","remove","$store","dispatch","$router","push","path","catch"],"sourceRoot":"","sources":["C:\\Users\\贺启衡\\Desktop\\hqh\\ssm\\hqh-ui\\src\\components\\login\\index.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"loginRules\" class=\"login-form\">\r\n      <h3 class=\"title\">若依后台管理系统</h3>\r\n      <el-form-item prop=\"username\">\r\n        <el-input\r\n          v-model=\"loginForm.username\"\r\n          type=\"text\"\r\n          auto-complete=\"off\"\r\n          placeholder=\"账号\"\r\n        >\r\n        </el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\">\r\n        <el-input\r\n          v-model=\"loginForm.password\"\r\n          type=\"password\"\r\n          auto-complete=\"off\"\r\n          placeholder=\"密码\"\r\n        >\r\n        </el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"code\" v-if=\"captchaOnOff\">\r\n        <el-input\r\n          v-model=\"loginForm.code\"\r\n          auto-complete=\"off\"\r\n          placeholder=\"验证码\"\r\n          style=\"width: 63%\"\r\n        >\r\n        </el-input>\r\n        <div class=\"login-code\">\r\n          <img :src=\"codeUrl\" @click=\"getCode\" class=\"login-code-img\"/>\r\n        </div>\r\n      </el-form-item>\r\n      <el-checkbox v-model=\"loginForm.rememberMe\" style=\"margin:0px 0px 25px 0px;\">记住密码</el-checkbox>\r\n      <el-form-item style=\"width:100%;\">\r\n        <el-button\r\n          :loading=\"loading\"\r\n          size=\"medium\"\r\n          type=\"primary\"\r\n          style=\"width:100%;\"\r\n        >\r\n          <span v-if=\"!loading\">登 录</span>\r\n          <span v-else>登 录 中...</span>\r\n        </el-button>\r\n        <div style=\"float: right;\" v-if=\"register\">\r\n          <router-link class=\"link-type\" :to=\"'/register'\">立即注册</router-link>\r\n        </div>\r\n      </el-form-item>\r\n    </el-form>\r\n    <!--  底部  -->\r\n    <div class=\"el-login-footer\">\r\n      <span>Copyright © 2018-2022 ruoyi.vip All Rights Reserved.</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCodeImg } from \"@/api/login\";\r\nimport Cookies from \"js-cookie\";\r\nimport { encrypt, decrypt } from '@/utils/jsencrypt'\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      codeUrl: \"\",\r\n      loginForm: {\r\n        username: \"admin\",\r\n        password: \"admin123\",\r\n        rememberMe: false,\r\n        code: \"\",\r\n        uuid: \"\"\r\n      },\r\n      loginRules: {\r\n        username: [\r\n          { required: true, trigger: \"blur\", message: \"请输入您的账号\" }\r\n        ],\r\n        password: [\r\n          { required: true, trigger: \"blur\", message: \"请输入您的密码\" }\r\n        ],\r\n        code: [{ required: true, trigger: \"change\", message: \"请输入验证码\" }]\r\n      },\r\n      loading: false,\r\n      // 验证码开关\r\n      captchaOnOff: true,\r\n      // 注册开关\r\n      register: false,\r\n      redirect: undefined\r\n    };\r\n  },\r\n  watch: {\r\n    $route: {\r\n      handler: function(route) {\r\n        this.redirect = route.query && route.query.redirect;\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  created() {\r\n    this.getCode();\r\n    this.getCookie();\r\n  },\r\n  methods: {\r\n    getCode() {\r\n      getCodeImg().then(res => {\r\n        this.captchaOnOff = res.captchaOnOff === undefined ? true : res.captchaOnOff;\r\n        if (this.captchaOnOff) {\r\n          this.codeUrl = \"data:image/gif;base64,\" + res.img;\r\n          this.loginForm.uuid = res.uuid;\r\n        }\r\n      });\r\n    },\r\n    getCookie() {\r\n      const username = Cookies.get(\"username\");\r\n      const password = Cookies.get(\"password\");\r\n      const rememberMe = Cookies.get('rememberMe')\r\n      this.loginForm = {\r\n        username: username === undefined ? this.loginForm.username : username,\r\n        password: password === undefined ? this.loginForm.password : decrypt(password),\r\n        rememberMe: rememberMe === undefined ? false : Boolean(rememberMe)\r\n      };\r\n    },\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(valid => {\r\n        if (valid) {\r\n          this.loading = true;\r\n          if (this.loginForm.rememberMe) {\r\n            Cookies.set(\"username\", this.loginForm.username, { expires: 30 });\r\n            Cookies.set(\"password\", encrypt(this.loginForm.password), { expires: 30 });\r\n            Cookies.set('rememberMe', this.loginForm.rememberMe, { expires: 30 });\r\n          } else {\r\n            Cookies.remove(\"username\");\r\n            Cookies.remove(\"password\");\r\n            Cookies.remove('rememberMe');\r\n          }\r\n          this.$store.dispatch(\"Login\", this.loginForm).then(() => {\r\n            this.$router.push({ path: this.redirect || \"/\" }).catch(()=>{});\r\n          }).catch(() => {\r\n            this.loading = false;\r\n            if (this.captchaOnOff) {\r\n              this.getCode();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style rel=\"stylesheet/scss\" lang=\"scss\">\r\n.login {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  background-image: url(\"../assets/images/login-background.jpg\");\r\n  background-size: cover;\r\n}\r\n.title {\r\n  margin: 0px auto 30px auto;\r\n  text-align: center;\r\n  color: #707070;\r\n}\r\n\r\n.login-form {\r\n  border-radius: 6px;\r\n  background: #ffffff;\r\n  width: 400px;\r\n  padding: 25px 25px 5px 25px;\r\n  .el-input {\r\n    height: 38px;\r\n    input {\r\n      height: 38px;\r\n    }\r\n  }\r\n  .input-icon {\r\n    height: 39px;\r\n    width: 14px;\r\n    margin-left: 2px;\r\n  }\r\n}\r\n.login-tip {\r\n  font-size: 13px;\r\n  text-align: center;\r\n  color: #bfbfbf;\r\n}\r\n.login-code {\r\n  width: 33%;\r\n  height: 38px;\r\n  float: right;\r\n  img {\r\n    cursor: pointer;\r\n    vertical-align: middle;\r\n  }\r\n}\r\n.el-login-footer {\r\n  height: 40px;\r\n  line-height: 40px;\r\n  position: fixed;\r\n  bottom: 0;\r\n  width: 100%;\r\n  text-align: center;\r\n  color: #fff;\r\n  font-family: Arial;\r\n  font-size: 12px;\r\n  letter-spacing: 1px;\r\n}\r\n.login-code-img {\r\n  height: 38px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}